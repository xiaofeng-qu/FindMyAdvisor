@model PagedList.IPagedList<FindMyAdvisor.Models.Professor>
@using PagedList.Mvc;

<table class="table table-hover table-condensed">
    <thead class="thead-dark">
        <tr>
            <th>
                @Html.ActionLink("Professor Name", "Index", new { sortOrder = ViewBag.NameSortParm })
            </th>
            <th>
                @Html.ActionLink("University", "Index", new { sortOrder = ViewBag.UniversitySortParm })
            </th>
            <th>
                @Html.ActionLink("Department", "Index", new { sortOrder = ViewBag.DepartmentSortParm })
            </th>
            <th>
                @Html.ActionLink("Rank", "Index", new { sortOrder = ViewBag.RankSortParm })
            </th>
            <th>
                @Html.ActionLink("Research interest", "Index", new { sortOrder = ViewBag.ResearchInterestSortParm })
            </th>
            @if (Session["role"] != null && Session["role"].ToString() == "admin")
            {
                <th></th>
            }
        </tr>
    </thead>

    @foreach (var item in Model)
    {
        <tr class="off-white">
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.University.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Department.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rank.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Research.Research_Interest)
            </td>
            @if (Session["role"] != null && Session["role"].ToString() == "admin")
            {
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Detail", "Detail", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            }
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort }))